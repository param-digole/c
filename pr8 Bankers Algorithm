#include <stdio.h> 
int main() { 
    int n, m, i, j, k, ind = 0; 
    int alloc[10][10], max[10][10], need[10][10], avail[10]; 
    int f[10], ans[10]; 
    printf("Enter number of processes: "); 
    scanf("%d", &n); 
    printf("Enter number of resources: "); 
    scanf("%d", &m); 
    printf("\nEnter Allocation Matrix (%d x %d):\n", n, m); 
    for (i = 0; i < n; i++) 
        for (j = 0; j < m; j++) 
            scanf("%d", &alloc[i][j]); 
    printf("\nEnter Maximum Matrix (%d x %d):\n", n, m); 
    for (i = 0; i < n; i++) 
        for (j = 0; j < m; j++) 
            scanf("%d", &max[i][j]); 
    printf("\nEnter Available Resources (%d):\n", m); 
    for (i = 0; i < m; i++) 
        scanf("%d", &avail[i]); 
    for (i = 0; i < n; i++) 
        for (j = 0; j < m; j++) 
            need[i][j] = max[i][j] - alloc[i][j]; 
    for (i = 0; i < n; i++) f[i] = 0; 
    int work[10]; 
    for (i = 0; i < m; i++) work[i] = avail[i]; 
    for (k = 0; k < n; k++) 
        for (i = 0; i < n; i++) 
            if (!f[i]) { 
                int flag = 0; 
                for (j = 0; j < m; j++) 
                    if (need[i][j] > work[j]) { flag = 1; break; } 
                if (!flag) { 
                    ans[ind++] = i; 
                    for (j = 0; j < m; j++) work[j] += alloc[i][j]; 
                    f[i] = 1; 
                } 
            } 
    int safe = 1; 
    for (i = 0; i < n; i++) 
        if (!f[i]) { safe = 0; break; } 
   if (safe) { 
        printf("\nSystem is in a SAFE state.\nSafe Sequence: "); 
        for (i = 0; i < n; i++) { 
            printf("P%d", ans[i]); 
            if (i != n - 1) printf(" -> "); 
        } 
        printf("\n"); 
    } else { 
        printf("\nSystem is NOT in a SAFE state (Deadlock possible).\n"); 
    } 
 
    return 0; 
} 
