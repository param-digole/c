#include <stdio.h> 
int main() { 
    int n, i; 
    int pid[20], at[20], bt[20], ct[20], tat[20], wt[20]; 
    int completed[20] = {0}; 
    int current_time = 0, completed_count = 0; 
    int total_tat = 0, total_wt = 0; 
    float avg_tat, avg_wt; 
    printf("Enter number of processes: "); 
    scanf("%d", &n); 
    for (i = 0; i < n; i++) { 
        pid[i] = i + 1; 
        printf("\nProcess %d:\n", pid[i]); 
        printf("Arrival Time: "); 
        scanf("%d", &at[i]); 
        printf("Burst Time: "); 
        scanf("%d", &bt[i]); 
    } 
    while (completed_count < n) { 
        int idx = -1, min_bt = 9999; 
        for (i = 0; i < n; i++) { 
            if (at[i] <= current_time && !completed[i]) { 
                if (bt[i] < min_bt) { 
                    min_bt = bt[i]; 
                    idx = i; 
                } else if (bt[i] == min_bt && at[i] < at[idx]) { 
                    idx = i; 
                } 
            } 
        } 
        if (idx == -1) { 
            current_time++; 
            continue; 
        } 
        current_time += bt[idx]; 
        ct[idx] = current_time; 
        tat[idx] = ct[idx] - at[idx]; 
        wt[idx] = tat[idx] - bt[idx]; 
        total_tat += tat[idx]; 
        total_wt += wt[idx]; 
        completed[idx] = 1; 
        completed_count++; 
    } 
    printf("\n---------------------------------------------------\n"); 
    printf("PID\tAT\tBT\tCT\tTAT\tWT\n"); 
    printf("---------------------------------------------------\n"); 
    for (i = 0; i < n; i++) 
        printf("P%d\t%d\t%d\t%d\t%d\t%d\n", pid[i], at[i], bt[i], ct[i], tat[i], wt[i]); 
    avg_tat = (float) total_tat / n; 
    avg_wt = (float) total_wt / n; 
    printf("\nAverage Turnaround Time = %.2f", avg_tat); 
    printf("\nAverage Waiting Time    = %.2f\n", avg_wt); 
    return 0; 
} 
